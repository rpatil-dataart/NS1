<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_401282_nsone_int.ImportSetApiUtils</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>ImportSetApiUtils</name>
        <script><![CDATA[var ImportSetApiUtils = Class.create();
ImportSetApiUtils.prototype = Object.extendsObject(x_401282_nsone_int.NSOneApiCore,{
	initialize: function() {
		//Initialize Parent
		x_401282_nsone_int.NSOneApiCore.prototype.initialize.call(this);

		//Initialize logger
		this.logger = new x_401282_nsone_int.SystemLogHelper();
		var func = "initialize";
		this.logger.info(this.type, func, "Entering Function");
		this.instanceUri = gs.getProperty('glide.servlet.uri');
	},

	processImportSet: function(
	importSetTableName,//(String) Name of Import Set Table
	 requestBody//(JSON) Request Body
	){
		var func = "processImportSet";
		this.logger.info(this.type, func, "Entering Function");

		var importResult;

		var method = "POST"; //Need to add in constants class or some table
		var endpoint = "ImportSetAPI";

		var headers= [{ "name": "Accept", "value": "application/json" },
					  { "name": "Content-Type", "value": "application/json"}];

		var params = [{ "name": "stagingTableName", "value": importSetTableName},
					  { "name": "instanceUri", "value": this.instanceUri }];


		var response = this.sendRequest(method, endpoint, headers, params, requestBody);

		try{
			if (this.responseWasSuccessful(response)) {
				//get JSON response
				importResult = this.getResponseJSON(response);

			} else {
				this.result.nsOneError.errorDetails = "Error";
			}
		}
		catch(e){
			this.logger.error(this.type,func, "Exception thrown in getting zones" + JSON.stringify(e));   
		}
		return importResult;
	},

	/* ***Unit Test ***

	//Get Zone Details
	var domainName ='www.testtwo.com';
	var importSetTableName = 'x_401282_nsone_int_di_zone';

	var zoneDetails = new NSOneApiZones().getZoneDetails(domainName);

	//Import Zone details to CMDB
	var result = new x_401282_nsone_int.ImportSetApiUtils().processImportSet(importSetTableName, zoneDetails);

	*/

	type: 'ImportSetApiUtils'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>smorey</sys_created_by>
        <sys_created_on>2019-09-25 19:54:14</sys_created_on>
        <sys_id>8ca6036edb88481021b91ffa68961955</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>ImportSetApiUtils</sys_name>
        <sys_package display_value="NSOne Integration" source="x_401282_nsone_int">79627e08dbbf330051bde4da4b961982</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="NSOne Integration">79627e08dbbf330051bde4da4b961982</sys_scope>
        <sys_update_name>sys_script_include_8ca6036edb88481021b91ffa68961955</sys_update_name>
        <sys_updated_by>smorey</sys_updated_by>
        <sys_updated_on>2019-09-26 09:39:41</sys_updated_on>
    </sys_script_include>
</record_update>
